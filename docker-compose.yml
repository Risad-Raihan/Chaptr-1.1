version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: chaptr_db
    environment:
      POSTGRES_DB: chaptr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - chaptr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: chaptr_backend
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/chaptr
      DEBUG: "true"
      HOST: 0.0.0.0
      PORT: 8000
      ALLOWED_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
      - backend_chroma:/app/chroma_db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - chaptr
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chaptr_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-here
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - chaptr
    command: npm run dev

volumes:
  postgres_data:
  backend_uploads:
  backend_chroma:

networks:
  chaptr:
    driver: bridge 